{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\CD\\\\Components\\\\App.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\n\nfunction App() {\n  class Countdown extends React.Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"state\", {\n        days: undefined,\n        hours: undefined,\n        minutes: undefined,\n        seconds: undefined\n      });\n    }\n\n    componentDidMount() {\n      this.interval = setInterval(() => {\n        const {\n          timeTillDate,\n          timeFormat\n        } = this.props;\n        const then = moment(timeTillDate, timeFormat);\n        const now = moment();\n        const countdown = moment(then - now);\n        const days = countdown.format('D');\n        const hours = countdown.format('HH');\n        const minutes = countdown.format('mm');\n        const seconds = countdown.format('ss');\n        this.setState({\n          days,\n          hours,\n          minutes,\n          seconds\n        });\n      }, 1000);\n    }\n\n    componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n\n    render() {\n      const {\n        days,\n        hours,\n        minutes,\n        seconds\n      } = this.state;\n      const daysRadius = mapNumber(days, 30, 0, 0, 360);\n      const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n      const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n      const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n      if (!seconds) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Countdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-wrapper\",\n          children: [days && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-item\",\n            children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n              radius: daysRadius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), days, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), hours && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-item\",\n            children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n              radius: hoursRadius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), hours, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), minutes && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-item\",\n            children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n              radius: minutesRadius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), minutes, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), seconds && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-item\",\n            children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n              radius: secondsRadius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), seconds, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n\n  }\n\n  const SVGCircle = ({\n    radius\n  }) => /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"countdown-svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      fill: \"none\",\n      stroke: \"#333\",\n      \"stroke-width\": \"4\",\n      d: describeArc(50, 50, 48, 0, radius)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Countdown, {\n    timeTillDate: \"05 26 2019, 6:00 am\",\n    timeFormat: \"MM DD YYYY, h:mm a\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this), document.getElementById('app'));\n\n  function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians)\n    };\n  }\n\n  function describeArc(x, y, radius, startAngle, endAngle) {\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n    var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n    var d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(\" \");\n    return d;\n  }\n\n  function mapNumber(number, in_min, in_max, out_min, out_max) {\n    return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Master/Desktop/CD/Components/App.js"],"names":["React","App","Countdown","Component","days","undefined","hours","minutes","seconds","componentDidMount","interval","setInterval","timeTillDate","timeFormat","props","then","moment","now","countdown","format","setState","componentWillUnmount","clearInterval","render","state","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","SVGCircle","radius","describeArc","ReactDOM","document","getElementById","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","d","join","number","in_min","in_max","out_min","out_max"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nfunction App() {\r\n  class Countdown extends React.Component {\r\n    state = {\r\n      days: undefined,\r\n      hours: undefined,\r\n      minutes: undefined,\r\n      seconds: undefined\r\n    }\r\n    \r\n    componentDidMount() {\r\n      this.interval = setInterval(() => {\r\n        const { timeTillDate, timeFormat } = this.props;\r\n        const then = moment(timeTillDate, timeFormat);\r\n        const now = moment();\r\n        const countdown = moment(then - now);\r\n        const days = countdown.format('D');\r\n        const hours = countdown.format('HH');\r\n        const minutes = countdown.format('mm');\r\n        const seconds = countdown.format('ss');\r\n  \r\n        this.setState({ days, hours, minutes, seconds });\r\n      }, 1000);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      if(this.interval) {\r\n        clearInterval(this.interval);\r\n      }\r\n    }\r\n    \r\n    render() {\r\n      const { days, hours, minutes, seconds } = this.state;\r\n      const daysRadius = mapNumber(days, 30, 0, 0, 360);\r\n      const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\r\n      const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\r\n      const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\r\n  \r\n      if(!seconds) {\r\n        return null;\r\n      }\r\n      \r\n      return (\r\n        <div>\r\n          <h1>Countdown</h1>\r\n          <div className='countdown-wrapper'>\r\n            {days && (\r\n              <div className='countdown-item'>\r\n                <SVGCircle radius={daysRadius} />\r\n                {days} \r\n                <span>days</span>\r\n              </div>\r\n            )}\r\n            {hours && (\r\n              <div className='countdown-item'>\t\t\t\t\t\t\t\r\n                <SVGCircle radius={hoursRadius} />\r\n                {hours} \r\n                <span>hours</span>\r\n              </div>\r\n            )}\r\n            {minutes && (\r\n              <div className='countdown-item'>\r\n                <SVGCircle radius={minutesRadius} />\r\n                {minutes} \r\n                <span>minutes</span>\r\n              </div>\r\n            )}\r\n            {seconds && (\r\n              <div className='countdown-item'>\r\n                <SVGCircle radius={secondsRadius} />\r\n                {seconds} \r\n                <span>seconds</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  const SVGCircle = ({ radius }) => (\r\n    <svg className='countdown-svg'>\r\n      <path fill=\"none\" stroke=\"#333\" stroke-width=\"4\" d={describeArc(50, 50, 48, 0, radius)}/>\r\n    </svg>\r\n  );\r\n  \r\n  ReactDOM.render(\r\n    <Countdown \r\n      timeTillDate=\"05 26 2019, 6:00 am\" \r\n      timeFormat=\"MM DD YYYY, h:mm a\" \r\n    />, \r\n    document.getElementById('app')\r\n  );\r\n  \r\n  function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n    var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;\r\n  \r\n    return {\r\n      x: centerX + (radius * Math.cos(angleInRadians)),\r\n      y: centerY + (radius * Math.sin(angleInRadians))\r\n    };\r\n  }\r\n  \r\n  function describeArc(x, y, radius, startAngle, endAngle){\r\n  \r\n      var start = polarToCartesian(x, y, radius, endAngle);\r\n      var end = polarToCartesian(x, y, radius, startAngle);\r\n  \r\n      var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n  \r\n      var d = [\r\n          \"M\", start.x, start.y, \r\n          \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\r\n      ].join(\" \");\r\n  \r\n      return d;       \r\n  }\r\n  \r\n  function mapNumber(number, in_min, in_max, out_min, out_max) {\r\n    return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n<div id=\"app\"></div>\r\n   \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}