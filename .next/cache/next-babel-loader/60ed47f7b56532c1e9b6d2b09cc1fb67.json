{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\CD\\\\pages\\\\App.js\";\nimport React, { useRef, useState } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./app.module.css\";\n\nconst renderTime = ({\n  remainingTime\n}) => {\n  const currentTime = useRef(remainingTime);\n  const prevTime = useRef(null);\n  const isNewTimeFirstTick = useRef(false);\n  const {\n    1: setOneLastRerender\n  } = useState(0);\n\n  if (currentTime.current !== remainingTime) {\n    isNewTimeFirstTick.current = true;\n    prevTime.current = currentTime.current;\n    currentTime.current = remainingTime;\n  } else {\n    isNewTimeFirstTick.current = false;\n  } // force one last re-render when the time is over to tirgger the last animation\n\n\n  if (remainingTime === 0) {\n    setTimeout(() => {\n      setOneLastRerender(val => val + 1);\n    }, 20);\n  }\n\n  const isTimeUp = isNewTimeFirstTick.current;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `time ${isTimeUp ? \"up\" : \"\"}`,\n      children: remainingTime\n    }, remainingTime, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), prevTime.current !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `time ${!isTimeUp ? \"down\" : \"\"}`,\n      children: prevTime.current\n    }, prevTime.current, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"CountdownCircleTimer\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \"React Component\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n        isPlaying: true,\n        duration: 10,\n        colors: [[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]],\n        children: renderTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Master/Desktop/CD/pages/App.js"],"names":["React","useRef","useState","CountdownCircleTimer","renderTime","remainingTime","currentTime","prevTime","isNewTimeFirstTick","setOneLastRerender","current","setTimeout","val","isTimeUp","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,oBAAT,QAAqC,8BAArC;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACxC,QAAMC,WAAW,GAAGL,MAAM,CAACI,aAAD,CAA1B;AACA,QAAME,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMO,kBAAkB,GAAGP,MAAM,CAAC,KAAD,CAAjC;AACA,QAAM;AAAA,OAAGQ;AAAH,MAAyBP,QAAQ,CAAC,CAAD,CAAvC;;AAEA,MAAII,WAAW,CAACI,OAAZ,KAAwBL,aAA5B,EAA2C;AACzCG,IAAAA,kBAAkB,CAACE,OAAnB,GAA6B,IAA7B;AACAH,IAAAA,QAAQ,CAACG,OAAT,GAAmBJ,WAAW,CAACI,OAA/B;AACAJ,IAAAA,WAAW,CAACI,OAAZ,GAAsBL,aAAtB;AACD,GAJD,MAIO;AACLG,IAAAA,kBAAkB,CAACE,OAAnB,GAA6B,KAA7B;AACD,GAZuC,CAcxC;;;AACA,MAAIL,aAAa,KAAK,CAAtB,EAAyB;AACvBM,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,kBAAkB,CAAEG,GAAD,IAASA,GAAG,GAAG,CAAhB,CAAlB;AACD,KAFS,EAEP,EAFO,CAAV;AAGD;;AAED,QAAMC,QAAQ,GAAGL,kBAAkB,CAACE,OAApC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAyB,MAAA,SAAS,EAAG,QAAOG,QAAQ,GAAG,IAAH,GAAU,EAAG,EAAjE;AAAA,gBACGR;AADH,OAAUA,aAAV;AAAA;AAAA;AAAA;AAAA,YADF,EAIGE,QAAQ,CAACG,OAAT,KAAqB,IAArB,iBACC;AAEE,MAAA,SAAS,EAAG,QAAO,CAACG,QAAD,GAAY,MAAZ,GAAqB,EAAG,EAF7C;AAAA,gBAIGN,QAAQ,CAACG;AAJZ,OACOH,QAAQ,CAACG,OADhB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtCD;;AAwCA,SAASI,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,sDAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,oBAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,QAAQ,EAAE,EAFZ;AAGE,QAAA,MAAM,EAAE,CAAC,CAAC,SAAD,EAAY,IAAZ,CAAD,EAAoB,CAAC,SAAD,EAAY,IAAZ,CAApB,EAAuC,CAAC,SAAD,CAAvC,CAHV;AAAA,kBAKGV;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nimport \"./app.module.css\";\r\n\r\nconst renderTime = ({ remainingTime }) => {\r\n  const currentTime = useRef(remainingTime);\r\n  const prevTime = useRef(null);\r\n  const isNewTimeFirstTick = useRef(false);\r\n  const [, setOneLastRerender] = useState(0);\r\n\r\n  if (currentTime.current !== remainingTime) {\r\n    isNewTimeFirstTick.current = true;\r\n    prevTime.current = currentTime.current;\r\n    currentTime.current = remainingTime;\r\n  } else {\r\n    isNewTimeFirstTick.current = false;\r\n  }\r\n\r\n  // force one last re-render when the time is over to tirgger the last animation\r\n  if (remainingTime === 0) {\r\n    setTimeout(() => {\r\n      setOneLastRerender((val) => val + 1);\r\n    }, 20);\r\n  }\r\n\r\n  const isTimeUp = isNewTimeFirstTick.current;\r\n\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div key={remainingTime} className={`time ${isTimeUp ? \"up\" : \"\"}`}>\r\n        {remainingTime}\r\n      </div>\r\n      {prevTime.current !== null && (\r\n        <div\r\n          key={prevTime.current}\r\n          className={`time ${!isTimeUp ? \"down\" : \"\"}`}\r\n        >\r\n          {prevTime.current}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>\r\n        CountdownCircleTimer\r\n        <br />\r\n        React Component\r\n      </h1>\r\n      <div className=\"timer-wrapper\">\r\n        <CountdownCircleTimer\r\n          isPlaying\r\n          duration={10}\r\n          colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\r\n        >\r\n          {renderTime}\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}